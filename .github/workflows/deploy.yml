name: Build and Deploy

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Restore NPM cache
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-packages-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-packages-

    - name: Install dependencies
      run: npm install

    - name: Build application
      run: npm run build

  docker_build:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: docker build -t blogfolio/blog .

  deploy:
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
    - name: Add SSH key and known hosts
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        known_hosts: |
          ec2-15-228-23-138.sa-east-1.compute.amazonaws.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCpc7/HMeEOjWYVZK9ZhoBiY2fZcqwgMMQrJi+uOBvT+7S1BTjI6BvNJyhgdI9JLJBz+rb/dlSZyxatreOhCDkB1/bYi50+dsCpMp6ibIZWV7tJKAH5edostOdqLT3uuvaCYDu7nOqFhZto76dlymXLPmO2Rf869FJQ5UoGXBCBMT8FYTzd3BuaAhPQ8+pXkTjN9X/aOX0u7EaoUnl2DjAAW4PpXEdXcG9Zh6p350MT0RZE8jVEX7Eq7k8N80tiXg9U9UfDamQgWsTOWNn/Z8MAozmproFqvMlXsoQNKGVZJW6gyDR03K6uF9uKunSt+B+CH84+MaNRQ+NmpCcVf/2vrKbxq29kdB1JOZB2KVbp2jcxmNufuF3BjTdVgWpaC9j/e5m8MnQYwRvGG8JCzqDfaFQuOOO/QuoSyYsRhBaxA+/YXvA69JXxud7gkn+3k/VOuo7vR41sVWYHMN7SjqtzqMtYQYZOyTTSLILgr4gK8YBcZY+yAndDyRnC/sgvvltUZvlV3/q2BslpxxuU6OZOl5TMm+6Tt+hi5GuaZ/V6ZLSsJS/pDeAcXlsWEOA4PN6dRd+7qBYDLpCac2E8mq17+O7il1B+fPvUzaRNaD5Ro/xJKasS0vmu/8MUGQo7PgjfD/CVZmDJL0267h5UMQEq01soDmY8JWrymwrqGsVybQ== GitHub Actions Key
    - name: Copy Docker image to EC2
      run: |
        docker save blogfolio/blog | ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'sudo docker load'

    - name: Remove existing Docker container
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo docker rm --force blog_app_1 || true"

    - name: Run the new Docker container
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo docker run --name blog_app_1 --network frontend --restart unless-stopped -d blogfolio/blog:latest"
