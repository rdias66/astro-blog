---
import Separator from '@components/Separator.astro'
import PostCard from '@components/ui/PostCard.astro'
import { SITE } from '@config'
import BaseLayout from '@layouts/BaseLayout.astro'
import PageLayout from '@layouts/PageLayout.astro'
import { getSortedPosts } from '@utils/post.utils'
import { getCollection } from 'astro:content'
const posts = await getCollection('blog')

const sortedPosts = getSortedPosts(posts)
const featuredPosts = sortedPosts.filter(({ data }) => data.featured)
const recentPosts = sortedPosts.filter(({ data }) => !data.featured)

const introImage =
  'https://github.com/rdias66/astro-blogfolio-assets/blob/main/images/blog-assets/et-home.png?raw=true'
const introTitle = 'Olá.'
const intro =
  'Seja bem-vindo ao meu blog profissional! Aqui, compartilho posts de tutoriais e projetos voltados para o aprendizado prático, com o objetivo de dividir experiências e fortalecer o conhecimento adquirido ao longo da minha jornada como desenvolvedor júnior. O foco deste espaço é mostrar de forma clara e didática o desenvolvimento completo de aplicações, desde estagios iniciais de planejamento back e frontend, até fluxos de DevOps.'
---

<BaseLayout>
  <PageLayout>
    <div class="intro-container">
      <div class="article-container">
        <code class="title-red">{introTitle}</code>
        <article class="intro-article">
          <code class="sub-title">{intro}</code>
        </article>
      </div>
      <div class="image-container">
        <img src={introImage} alt="et-home" />
      </div>
    </div>
    <Separator thin={true} />
    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <h2>Featured</h2>
            <ul>
              {featuredPosts.map(({ data, slug }) => (
                <PostCard
                  href={`/posts/${slug}/`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          {recentPosts.length > 0 && <Separator thin={true} />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts">
          <h2>Recent Posts</h2>
          <ul>
            {recentPosts.map(
              ({ data, slug }, index) =>
                index < SITE.postPerIndex && (
                  <PostCard
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                ),
            )}
          </ul>
        </section>
      )
    }
  </PageLayout>

  <style>
    .intro-container {
      display: block;
      text-align: center;
      margin: 20px 0;
    }

    .article-container {
      margin-bottom: 20px;
    }

    .intro-article {
      font-size: 1rem;
      line-height: 1.5;
      color: #333;
    }

    .image-container img {
      max-width: 100%;
      height: auto;
      display: block;
      margin: 0 auto;
    }

    .intro-article {
      margin-top: 2rem;
    }

    @media (min-width: 768px) {
      .intro-container {
        display: flex;
        justify-items: baseline;
        align-items: start;
        text-align: left;
      }

      .article-container {
        flex: 1;
        margin-right: 20px;
        color: var(--primary-color);
        padding: 1rem;
      }
      .image-container {
        flex: 0 0 40%;
        margin-top: 3.5rem;
      }
    }
  </style>
</BaseLayout>
